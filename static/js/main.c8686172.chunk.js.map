{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","redux/сontacts/сontacts-actions.js","redux/сontacts/сontacts-reducer.js","redux/store.js","components/Title/Title.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","items","createReducer","actionContacts","state","payload","find","name","isEqualName","alert","checkGetNewContact","filter","id","type","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Title","title","defaultProps","Fiter","value","onChange","className","styles","title_filter","input_filter","connect","dispatch","e","contactsAction","target","shortid","require","ContactForm","onSubmit","useState","setId","setName","number","setNumber","handleChange","currentTarget","reset","nameInputId","generate","numberInputId","form","preventDefault","form_label","htmlFor","label_name","form_input","pattern","required","add_contact_btn","defaultTypes","text","ContactItem","onDelete","delete_contact_btn","onClick","contactId","ContactsList","console","log","map","PropTypes","shape","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","getAllContacts","includes","Filter","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c8686172.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title_filter\":\"Filter_title_filter__1xtyV\",\"input_filter\":\"Filter_input_filter__kNh4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_contact_btn\":\"ContactsList_delete_contact_btn__37muD\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"сontacts/add\");\nconst deleteContact = createAction(\"сontacts/delete\");\nconst changeFilter = createAction(\"сontacts/changeFilter\");\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport actionContacts from \"./сontacts-actions\";\n\nfunction checkGetNewContact(state, payload) {\n  const isEqualName = (payload) => {\n    // console.log(\"EQUAL ADD: \", payload);\n    // console.log(\"EQUAL ADD: \", payload.text.name);\n    return state.find(({ name }) => name === payload.name);\n  };\n\n  if (!isEqualName(payload)) {\n    // console.log(\"items ~ payload ==>  \", payload);\n    const newContacts = [payload, ...state];\n    // console.log(\"items ~ newContacts ==>  \", newContacts);\n\n    return newContacts;\n  } else {\n    alert(`${payload.name} is already in contacts`);\n    return state;\n  }\n}\n\nconst items = createReducer([], {\n  [actionContacts.addContact]: (state, { payload }) =>\n    checkGetNewContact(state, payload),\n  [actionContacts.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actionContacts.changeFilter]: (state, { type, payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n// Logger with default options\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport contactsReducer from \"./сontacts/сontacts-reducer\";\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nlet persistor = persistStore(store);\n\nexport default { store, persistor };\n\n//\n\n// const store = configureStore({\n//     reducer: {\n//         contacts: contactsReducer,\n//     },\n//     middleware: middleware,\n//     devTools: process.env.NODE_ENV == \"development\",\n// });\n\n// export default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Title = ({ title }) => <h2>{title}</h2>;\n\nTitle.defaultProps = {\n  title: \"Phonebook\",\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Title;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport contactsAction from \"../../redux/сontacts/сontacts-actions\";\nimport styles from \"./Filter.module.css\";\n\nconst Fiter = ({ value, onChange }) => (\n  <label>\n    <span className={styles.title_filter}>Find contacts by name</span>\n    <input\n      className={styles.input_filter}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFiter.defaultProps = {\n  value: \"\",\n  onChange: () => {},\n};\n\nFiter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsAction.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fiter);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport contactsAction from \"../../redux/сontacts/сontacts-actions\";\nimport styles from \"./ContactForm.module.css\";\n\nconst shortid = require(\"shortid\");\n\nfunction ContactForm({ onSubmit }) {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(null);\n\n  const handleChange = (e) => {\n    // console.log(\"Form ~ e: \", e.currentTarget);\n    const { name, value, id } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n    }\n\n    setId(id);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ id, name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setId(\"\");\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.form_label} htmlFor={nameInputId}>\n        <span className={styles.label_name}>Name</span>\n        <input\n          className={styles.form_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={styles.form_label} htmlFor={numberInputId}>\n        <span className={styles.label_name}>Number</span>\n        <input\n          className={styles.form_input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={styles.add_contact_btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.defaultTypes = {\n  onSubmit: () => {},\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (text) => dispatch(contactsAction.addContact(text)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport contactsAction from \"../../redux/сontacts/сontacts-actions\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <tr key={id}>\n    <td>{name}</td>\n    <td>{number}</td>\n    <td>\n      <button\n        className={styles.delete_contact_btn}\n        value={id}\n        onClick={() => onDelete(id)}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nContactItem.defaultProps = {\n  onDelete: () => {},\n  id: \"\",\n  name: \"\",\n  number: 0,\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onDelete: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (contactId) => dispatch(contactsAction.deleteContact(contactId)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport ContactItem from \"./ContactItem\";\n\nconst ContactsList = ({ contacts }) => {\n  console.log(\"ContactsList ~ contacts: \", contacts);\n\n  return (\n    <div>\n      <h3>Contacts</h3>\n      <table>\n        <thead>\n          <tr>\n            <td>Name</td>\n            <td>Phone</td>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem id={id} name={name} number={number} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nContactsList.defaultProps = {\n  onDelete: () => {},\n  contacts: PropTypes.shape({\n    id: \"\",\n    name: \"\",\n    number: 0,\n  }),\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.number,\n  }),\n  onDelete: PropTypes.func,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  console.log(\"getVisibleContacts ~ allContacts ==> \", allContacts);\n  console.log(\"getVisibleContacts ~ filter ==> \", filter);\n\n  const normalizedFilter = filter.toLowerCase();\n  console.log(\"getVisibleContacts ~ normalizedFilter ==> \", normalizedFilter);\n\n  const getAllContacts = allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  console.log(\"allContacts ~ getAllContacts ==>  \", getAllContacts);\n\n  return getAllContacts;\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\n  return {\n    contacts: getVisibleContacts(items, filter),\n  };\n};\n\nexport default connect(mapStateToProps)(ContactsList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport Title from \"./components/Title\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\n\n// console.log(store.store.getState());\n\nfunction App(contacts) {\n  console.log(\"contacts = useState ~ contacts: \", contacts);\n\n  return (\n    <div className=\"container\">\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1PCFl\",\"form_input\":\"ContactForm_form_input__1iojh\",\"label_name\":\"ContactForm_label_name__1s7OQ\",\"add_contact_btn\":\"ContactForm_add_contact_btn__3RoLs\"};"],"sourceRoot":""}